name: tests
on: push
jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests with Maven
        run: mvn -B test --file pom.xml

  merge_pull_request:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Merge PR
        run: |
          # GitHub API request to merge the pull request
          # Add condition to check if tests have passed
          if [ "$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}" | jq -r '.conclusion')" != "success" ]; then
            echo "Tests did not pass. PR will not be automatically merged."
            exit 1
          fi

          # Add condition to check if there are no conflicts
          if [ "$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.after }}" | jq -r '.mergeable')" != "true" ]; then
            echo "There are conflicts in the PR. PR will not be automatically merged."
            exit 1
          fi

          # Perform the merge if conditions are met
          curl -X PUT \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.after }}/merge"